name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.1.0

    - name: Cache Paket
      uses: actions/cache@v1.1.2
      env:
        cache-name: cache-paket
      with:
        path: packages
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('paket.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Cache NPM
      uses: actions/cache@v1.1.2
      env:
        cache-name: cache-npm
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Parse repository name
      run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
      shell: bash
  
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.1

    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.102

    - name: Node version
      shell: bash
      run: node --version

    - name: .NET version
      shell: bash
      run: dotnet --info

    - name: Configure AWS credentials (Staging)
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR (Staging)
      uses: aws-actions/amazon-ecr-login@v1

    - name: Configure AWS credentials (Production)
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PRD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRD }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR (Production)
      uses: aws-actions/amazon-ecr-login@v1

    - name: Install NPM dependencies (master)
      shell: bash
      run: npm install

    - name: Run Semantic Release (master)
      shell: bash
      run: npx semantic-release
      env:
        BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY }}
        BITBUCKET_COMMIT: ${{ github.sha }}
        CIRCLE_PROJECT_REPONAME: ${{ env.REPOSITORY_NAME }}
        CONFLUENCE_USERNAME: david.cumps@vlaanderen.be
        CONFLUENCE_PASSWORD: ${{ secrets.CONFLUENCE_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_USERNAME: release-bot
        GIT_AUTHOR_NAME: release-bot
        GIT_COMMITTER_NAME: release-bot
        GIT_EMAIL: informatie.vlaanderen@vlaanderen.be
        GIT_AUTHOR_EMAIL: informatie.vlaanderen@vlaanderen.be
        GIT_COMMITTER_EMAIL: informatie.vlaanderen@vlaanderen.be
        NUGET_HOST: https://www.nuget.org
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Copy containers to production
      shell: bash
      run: |
        SEMVER=$(cat $WORKSPACE/semver)
        docker tag  $BUILD_DOCKER_REGISTRY/municipality-registry/api-legacy:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/api-legacy:$SEMVER
        docker push $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/api-legacy:$SEMVER

        docker tag  $BUILD_DOCKER_REGISTRY/municipality-registry/api-crab-import:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/api-crab-import:$SEMVER
        docker push $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/api-crab-import:$SEMVER

        docker tag  $BUILD_DOCKER_REGISTRY/municipality-registry/api-extract:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/api-extract:$SEMVER
        docker push $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/api-extract:$SEMVER

        docker tag  $BUILD_DOCKER_REGISTRY/municipality-registry/projector:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/projector:$SEMVER
        docker push $BUILD_DOCKER_REGISTRY_PRD/municipality-registry/projector:$SEMVER
      env:
        WORKSPACE: ${{ github.workspace }}
        BUILD_DOCKER_REGISTRY: ${{ secrets.BUILD_DOCKER_REGISTRY }}
        BUILD_DOCKER_REGISTRY_PRD: ${{ secrets.BUILD_DOCKER_REGISTRY_PRD }}
